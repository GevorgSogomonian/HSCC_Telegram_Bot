spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
#    properties:
#      hibernate.format_sql: true # Форматирует запросы для удобства чтения
#      hibernate.use_sql_comments: true # Добавляет комментарии к запросам
#      hibernate.generate_statistics: true # Генерация статистики выполнения запросов

  datasource:
    url: jdbc:mysql://localhost:3308/hse_database
    username: hse_user
    password: hse_password
#    driver-class-name: com.mysql.cj.jdbc.Driver

  telegram:
    bot:
      username: hscc_test_bot
      token: 7697397427:AAEblENgSu7YhfxlnfVlPTlqyIwwdp-HNo4
      path: false

  minio:
    url: http://localhost:9000
    accessKey: minioadmin
    secretKey: minioadmin
    bucketName: pictures

  liquibase:
    change-log: classpath:db/db.changelog-master.yaml
    enabled: false

#logging:
#  level:å
#    org.quartz: DEBUG

#    org.hibernate.SQL: DEBUG # Логирует SQL-запросы
#    org.hibernate.type.descriptor.sql: TRACE # Логирует значения параметров запросов
#    org.springframework.jdbc.core.JdbcTemplate: DEBUG # Логирует выполнение запросов через JdbcTemplate
#    org.springframework.jdbc.core.StatementCreatorUtils: TRACE # Логирует параметры запросов

#для тестирования в локальных docker контейнерах
---
spring:

  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:mysql://mysql_hse:3308/hse_database
#    url: jdbc:postgresql://postgres:5432/hse_database

  minio:
    url: http://minio:9000

#для итогового релиза на сервер
---
spring:

  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mysql://mysql_hse:3308/hse_database
    username: hse_user
    password: hse_password
#    url: jdbc:postgresql://postgres:5432/hse_database

  telegram:
    bot:
      username: hscc_hse_bot
      token: 8113684980:AAFEpEsQFkf9SDYV50rLG6X7It9aVM43Bfs
      path: false

  minio:
    url: http://minio:9000